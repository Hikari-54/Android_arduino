package com.example.bluetooth_andr11.location

import android.location.Location
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

/**
 * –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã GPS —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è.
 *
 * –ö–∞–∂–¥—ã–π —Ä–µ–∂–∏–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
 * - HIGH_ACCURACY: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 * - BALANCED: –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç—å/—ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
 * - LOW_POWER: –≠–∫–æ–Ω–æ–º–∏—è –±–∞—Ç–∞—Ä–µ–∏ –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 * - GPS_ONLY: –¢–æ–ª—å–∫–æ —Å–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
 * - NETWORK_ONLY: –¢–æ–ª—å–∫–æ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
 * - PASSIVE: –ü–∞—Å—Å–∏–≤–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –±–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */
enum class LocationMode(
    val displayName: String,
    val description: String,
    val powerConsumption: PowerLevel,
    val expectedAccuracy: AccuracyLevel,
    val updateInterval: Long,
    val icon: String
) {
    HIGH_ACCURACY(
        displayName = "–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å",
        description = "GPS + Network, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å, –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ",
        powerConsumption = PowerLevel.HIGH,
        expectedAccuracy = AccuracyLevel.EXCELLENT,
        updateInterval = 10000L,
        icon = "üéØ"
    ),

    BALANCED(
        displayName = "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
        description = "–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è",
        powerConsumption = PowerLevel.MEDIUM,
        expectedAccuracy = AccuracyLevel.GOOD,
        updateInterval = 30000L,
        icon = "‚öñÔ∏è"
    ),

    LOW_POWER(
        displayName = "–≠–∫–æ–Ω–æ–º–∏—è —ç–Ω–µ—Ä–≥–∏–∏",
        description = "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, —Å–Ω–∏–∂–µ–Ω–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å",
        powerConsumption = PowerLevel.LOW,
        expectedAccuracy = AccuracyLevel.FAIR,
        updateInterval = 60000L,
        icon = "üîã"
    ),

    PASSIVE(
        displayName = "–ü–∞—Å—Å–∏–≤–Ω—ã–π",
        description = "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –±–µ–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤",
        powerConsumption = PowerLevel.MINIMAL,
        expectedAccuracy = AccuracyLevel.VARIABLE,
        updateInterval = 300000L,
        icon = "‚è∏Ô∏è"
    ),

    GPS_ONLY(
        displayName = "–¢–æ–ª—å–∫–æ GPS",
        description = "–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Å–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏",
        powerConsumption = PowerLevel.HIGH,
        expectedAccuracy = AccuracyLevel.EXCELLENT,
        updateInterval = 15000L,
        icon = "üõ∞Ô∏è"
    ),

    NETWORK_ONLY(
        displayName = "–¢–æ–ª—å–∫–æ —Å–µ—Ç—å",
        description = "–°–µ—Ç–µ–≤–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç",
        powerConsumption = PowerLevel.LOW,
        expectedAccuracy = AccuracyLevel.FAIR,
        updateInterval = 20000L,
        icon = "üì∂"
    );

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Å –∏–∫–æ–Ω–∫–æ–π
     */
    fun getFullDescription(): String {
        return "$icon $displayName - $description"
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
     */
    fun getPerformanceInfo(): String {
        return "–≠–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: ${powerConsumption.displayName}, " +
                "–¢–æ—á–Ω–æ—Å—Ç—å: ${expectedAccuracy.displayName}, " +
                "–ò–Ω—Ç–µ—Ä–≤–∞–ª: ${updateInterval / 1000}—Å"
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Ä–µ–∂–∏–º –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    fun isCriticalOperationSuitable(): Boolean {
        return expectedAccuracy in listOf(AccuracyLevel.EXCELLENT, AccuracyLevel.GOOD)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∂–∏–º
     */
    fun isEnergyEfficient(): Boolean {
        return powerConsumption in listOf(PowerLevel.LOW, PowerLevel.MINIMAL)
    }
}

/**
 * –£—Ä–æ–≤–Ω–∏ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ GPS
 */
enum class PowerLevel(val displayName: String, val value: Int) {
    MINIMAL("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ", 1),
    LOW("–ù–∏–∑–∫–æ–µ", 2),
    MEDIUM("–°—Ä–µ–¥–Ω–µ–µ", 3),
    HIGH("–í—ã—Å–æ–∫–æ–µ", 4);

    fun getIcon(): String {
        return when (this) {
            MINIMAL -> "üü¢"
            LOW -> "üü°"
            MEDIUM -> "üü†"
            HIGH -> "üî¥"
        }
    }
}

/**
 * –£—Ä–æ–≤–Ω–∏ –æ–∂–∏–¥–∞–µ–º–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ GPS
 */
enum class AccuracyLevel(val displayName: String, val typicalAccuracy: Float) {
    EXCELLENT("–û—Ç–ª–∏—á–Ω–∞—è", 5f),
    GOOD("–•–æ—Ä–æ—à–∞—è", 20f),
    FAIR("–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–∞—è", 100f),
    POOR("–ù–∏–∑–∫–∞—è", 500f),
    VARIABLE("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è", Float.MAX_VALUE);

    fun getIcon(): String {
        return when (this) {
            EXCELLENT -> "üéØ"
            GOOD -> "‚úÖ"
            FAIR -> "üü°"
            POOR -> "‚ö†Ô∏è"
            VARIABLE -> "‚ùì"
        }
    }
}

/**
 * Comprehensive data class –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é.
 *
 * –°–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö, —Ç–æ—á–Ω–æ—Å—Ç–∏, –∏—Å—Ç–æ—á–Ω–∏–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–∫–∞—Ö
 * —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö.
 *
 * @param coordinates —Å—Ç—Ä–æ–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "latitude, longitude"
 * @param accuracy —Ç–æ—á–Ω–æ—Å—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤ –º–µ—Ç—Ä–∞—Ö
 * @param source –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (GPS, Network, Cache –∏ —Ç.–¥.)
 * @param timestamp –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @param isFromCache —Ñ–ª–∞–≥ —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * @param provider –ø—Ä–æ–≤–∞–π–¥–µ—Ä –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
 * @param bearing –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –≥—Ä–∞–¥—É—Å–∞—Ö (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
 * @param speed —Å–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –≤ –º/—Å (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
 */
data class LocationInfo(
    val coordinates: String,
    val accuracy: Float,
    val source: String,
    val timestamp: Long,
    val isFromCache: Boolean = false,
    val provider: String? = null,
    val bearing: Float? = null,
    val speed: Float? = null
) {
    companion object {
        /** –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è */
        private const val MAX_LOCATION_AGE_MS = 5 * 60 * 1000L // 5 –º–∏–Ω—É—Ç

        /** –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ */
        private val timeFormat = SimpleDateFormat("HH:mm:ss", Locale.getDefault())

        /** –§–æ—Ä–º–∞—Ç –ø–æ–ª–Ω–æ–π –¥–∞—Ç—ã */
        private val fullDateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault())

        /**
         * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç LocationInfo –∏–∑ Android Location
         */
        fun fromLocation(
            location: Location,
            source: String,
            isFromCache: Boolean = false
        ): LocationInfo {
            return LocationInfo(
                coordinates = String.format(
                    Locale.US,
                    "%.6f, %.6f",
                    location.latitude,
                    location.longitude
                ),
                accuracy = location.accuracy,
                source = source,
                timestamp = System.currentTimeMillis(),
                isFromCache = isFromCache,
                provider = location.provider,
                bearing = if (location.hasBearing()) location.bearing else null,
                speed = if (location.hasSpeed()) location.speed else null
            )
        }

        /**
         * –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç LocationInfo –¥–ª—è —Å–ª—É—á–∞–µ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö
         */
        fun empty(): LocationInfo {
            return LocationInfo(
                coordinates = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
                accuracy = 0f,
                source = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ",
                timestamp = 0L,
                isFromCache = false
            )
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
     *
     * @param maxAgeMs –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     * @return true –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–≤–µ–∂–∏–µ
     */
    fun isFresh(maxAgeMs: Long = MAX_LOCATION_AGE_MS): Boolean {
        return System.currentTimeMillis() - timestamp < maxAgeMs
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     */
    fun getAgeSeconds(): Long {
        return (System.currentTimeMillis() - timestamp) / 1000
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –º–∏–Ω—É—Ç–∞—Ö
     */
    fun getAgeMinutes(): Long {
        return getAgeSeconds() / 60
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
     */
    fun hasCoordinates(): Boolean {
        return coordinates != "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" && coordinates.isNotBlank()
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–≤–∏–∂–µ–Ω–∏–∏
     */
    fun hasMovementInfo(): Boolean {
        return bearing != null || speed != null
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
     */
    fun getQualityLevel(): LocationQuality {
        return when {
            !hasCoordinates() -> LocationQuality.NO_DATA
            !isFresh() -> LocationQuality.STALE
            accuracy <= 5f -> LocationQuality.EXCELLENT
            accuracy <= 20f -> LocationQuality.GOOD
            accuracy <= 100f -> LocationQuality.FAIR
            accuracy <= 500f -> LocationQuality.POOR
            else -> LocationQuality.VERY_POOR
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
     */
    fun getShortDescription(): String {
        if (!hasCoordinates()) return "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"

        val ageText = when {
            getAgeSeconds() < 30 -> "—Å–µ–π—á–∞—Å"
            getAgeSeconds() < 60 -> "${getAgeSeconds()}—Å –Ω–∞–∑–∞–¥"
            getAgeMinutes() < 60 -> "${getAgeMinutes()}–º –Ω–∞–∑–∞–¥"
            else -> "–±–æ–ª–µ–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
        }

        return "¬±${accuracy.toInt()}–º, $ageText"
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
     */
    fun getFormattedInfo(): String {
        if (!hasCoordinates()) return "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"

        val ageText = if (getAgeSeconds() > 0) " (${getAgeSeconds()}—Å –Ω–∞–∑–∞–¥)" else ""
        val cacheText = if (isFromCache) " [–∫—ç—à]" else ""
        val providerText = provider?.let { " [$it]" } ?: ""

        return "$coordinates ¬±${accuracy.toInt()}–º $source$cacheText$providerText$ageText"
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–∫–ª—é—á–∞—è –¥–≤–∏–∂–µ–Ω–∏–µ
     */
    fun getDetailedInfo(): String {
        val basic = getFormattedInfo()

        val movementInfo = buildString {
            bearing?.let { append(" | –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${it.toInt()}¬∞") }
            speed?.let { append(" | –°–∫–æ—Ä–æ—Å—Ç—å: ${"%.1f".format(it * 3.6)}–∫–º/—á") }
        }

        return basic + movementInfo
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
     */
    fun getFormattedTime(): String {
        return if (timestamp > 0) {
            timeFormat.format(Date(timestamp))
        } else {
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
     */
    fun getFormattedDateTime(): String {
        return if (timestamp > 0) {
            fullDateFormat.format(Date(timestamp))
        } else {
            "–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    fun isSuitableForNavigation(): Boolean {
        return hasCoordinates() && isFresh() && accuracy <= 100f
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    fun isSuitableForPrecisionTasks(): Boolean {
        return hasCoordinates() && isFresh(60000L) && accuracy <= 20f
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    fun getImprovementSuggestions(): List<String> {
        val suggestions = mutableListOf<String>()

        if (!hasCoordinates()) {
            suggestions.add("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é")
            suggestions.add("–í–∫–ª—é—á–∏—Ç–µ —Å–ª—É–∂–±—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        } else {
            if (!isFresh()) {
                suggestions.add("–û–±–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è")
            }

            if (accuracy > 100f) {
                suggestions.add("–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ—Å—å –≤ –º–µ—Å—Ç–æ —Å –ª—É—á—à–∏–º –ø—Ä–∏–µ–º–æ–º GPS")
                suggestions.add("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏")
            }

            if (isFromCache) {
                suggestions.add("–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç GPS")
            }
        }

        return suggestions
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫—É—é —Å–≤–æ–¥–∫—É –¥–∞–Ω–Ω—ã—Ö
     */
    fun getStatsSummary(): String {
        val quality = getQualityLevel()
        val freshness = if (isFresh()) "–°–≤–µ–∂–∏–µ" else "–£—Å—Ç–∞—Ä–µ–ª–∏"
        val cacheStatus = if (isFromCache) "–ö—ç—à" else "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ"

        return "${quality.displayName} | $freshness | $cacheStatus"
    }
}

/**
 * –£—Ä–æ–≤–Ω–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π
 */
enum class LocationQuality(
    val displayName: String,
    val description: String,
    val icon: String,
    val color: String
) {
    NO_DATA("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ", "‚ùå", "üî¥"),
    STALE("–£—Å—Ç–∞—Ä–µ–ª–∏", "–î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "‚è∞", "üü°"),
    VERY_POOR("–û—á–µ–Ω—å –Ω–∏–∑–∫–æ–µ", "–¢–æ—á–Ω–æ—Å—Ç—å —Ö—É–∂–µ 500–º", "‚ùó", "üî¥"),
    POOR("–ù–∏–∑–∫–æ–µ", "–¢–æ—á–Ω–æ—Å—Ç—å 100-500–º", "‚ö†Ô∏è", "üü†"),
    FAIR("–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ", "–¢–æ—á–Ω–æ—Å—Ç—å 20-100–º", "üü°", "üü°"),
    GOOD("–•–æ—Ä–æ—à–µ–µ", "–¢–æ—á–Ω–æ—Å—Ç—å 5-20–º", "‚úÖ", "üü¢"),
    EXCELLENT("–û—Ç–ª–∏—á–Ω–æ–µ", "–¢–æ—á–Ω–æ—Å—Ç—å –¥–æ 5–º", "üéØ", "üíö");

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∏–∫–æ–Ω–∫–æ–π
     */
    fun getFullDescription(): String {
        return "$icon $displayName - $description"
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    fun isSuitableForCriticalOperations(): Boolean {
        return this in listOf(GOOD, EXCELLENT)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    fun isSuitableForGeneralUse(): Boolean {
        return this in listOf(FAIR, GOOD, EXCELLENT)
    }
}

/**
 * Comprehensive data class –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.
 *
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 * —Å–∏—Å—Ç–µ–º—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤–∫–ª—é—á–∞—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã, —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö.
 *
 * @param hasPermission –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é
 * @param isGpsEnabled —Å–æ—Å—Ç–æ—è–Ω–∏–µ GPS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * @param isNetworkEnabled —Å–æ—Å—Ç–æ—è–Ω–∏–µ Network –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * @param isLocationAvailable –æ–±—â–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 * @param currentMode —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã GPS
 * @param lastUpdate –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
 * @param isUpdating –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 * @param cachedLocation –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
 * @param batteryOptimized –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ä–µ–∂–∏–º –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –±–∞—Ç–∞—Ä–µ–∏
 * @param signalQuality –∫–∞—á–µ—Å—Ç–≤–æ GPS —Å–∏–≥–Ω–∞–ª–∞
 */
data class LocationStatus(
    val hasPermission: Boolean,
    val isGpsEnabled: Boolean,
    val isNetworkEnabled: Boolean,
    val isLocationAvailable: Boolean,
    val currentMode: LocationMode,
    val lastUpdate: LocationInfo,
    val isUpdating: Boolean,
    val cachedLocation: Location?,
    val batteryOptimized: Boolean = false,
    val signalQuality: SignalQuality = SignalQuality.UNKNOWN
) {
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∫ —Ä–∞–±–æ—Ç–µ
     */
    fun isSystemReady(): Boolean {
        return hasPermission && (isGpsEnabled || isNetworkEnabled)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã (–≤–∫–ª—é—á–∞—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
     */
    fun isFullyOperational(): Boolean {
        return isSystemReady() && lastUpdate.hasCoordinates() && lastUpdate.isFresh()
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
     */
    fun getRecommendations(): List<String> {
        val recommendations = mutableListOf<String>()

        if (!hasPermission) {
            recommendations.add("üîê –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é")
        }

        if (!isGpsEnabled && !isNetworkEnabled) {
            recommendations.add("üõ∞Ô∏è –í–∫–ª—é—á–∏—Ç–µ —Å–ª—É–∂–±—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        }

        if (!isLocationAvailable && hasPermission) {
            recommendations.add("üì° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GPS —Å–∏–≥–Ω–∞–ª–∞ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏")
        }

        if (isSystemReady() && !isUpdating) {
            recommendations.add("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è")
        }

        if (!lastUpdate.isFresh() && isUpdating) {
            recommendations.add("‚è±Ô∏è –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
        }

        if (lastUpdate.accuracy > 100f) {
            recommendations.add("üéØ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ—Å—å –≤ –º–µ—Å—Ç–æ —Å –ª—É—á—à–∏–º GPS –ø—Ä–∏–µ–º–æ–º")
        }

        return recommendations
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
     */
    fun getStatusDescription(): String {
        return when {
            !hasPermission -> "üî¥ –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
            !isGpsEnabled && !isNetworkEnabled -> "üî¥ –°–ª—É–∂–±—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã"
            !isLocationAvailable -> "üü° –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
            !isUpdating -> "üü° –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            !lastUpdate.hasCoordinates() -> "üü° –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
            !lastUpdate.isFresh() -> "üü† –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
            lastUpdate.accuracy > 100f -> "üü° –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å GPS"
            else -> "üü¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    fun getSummary(): String {
        val updateStatus = if (isUpdating) "–∞–∫—Ç–∏–≤–Ω—ã" else "–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        val modeText = currentMode.displayName

        return "${getStatusDescription()} | –†–µ–∂–∏–º: $modeText | –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: $updateStatus"
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
     */
    fun getDetailedReport(): String {
        return buildString {
            appendLine("üìç –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ –ú–ï–°–¢–û–ü–û–õ–û–ñ–ï–ù–ò–Ø")
            appendLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
            appendLine("‚Ä¢ –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${getStatusDescription()}")
            appendLine("‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${if (hasPermission) "‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã" else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"}")
            appendLine("‚Ä¢ GPS –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${if (isGpsEnabled) "‚úÖ –í–∫–ª—é—á–µ–Ω" else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"}")
            appendLine("‚Ä¢ Network –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${if (isNetworkEnabled) "‚úÖ –í–∫–ª—é—á–µ–Ω" else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"}")
            appendLine("‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: ${if (isLocationAvailable) "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ" else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"}")
            appendLine("‚Ä¢ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: ${currentMode.getFullDescription()}")
            appendLine("‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${if (isUpdating) "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã" else "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"}")
            appendLine("‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞: ${signalQuality.getFullDescription()}")
            appendLine("‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ: ${lastUpdate.getFormattedInfo()}")
            appendLine("‚Ä¢ –ö—ç—à: ${if (cachedLocation != null) "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" else "‚ùå –ü—É—Å—Ç"}")
            appendLine("‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞—Ç–∞—Ä–µ–∏: ${if (batteryOptimized) "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"}")
            appendLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–∏—Å—Ç–µ–º—ã
     */
    fun hasCriticalIssues(): Boolean {
        return !hasPermission || (!isGpsEnabled && !isNetworkEnabled)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
     */
    fun hasPerformanceIssues(): Boolean {
        return !lastUpdate.isFresh() || lastUpdate.accuracy > 200f || signalQuality == SignalQuality.POOR
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏—Å—Ç–µ–º—ã (0-100)
     */
    fun getQualityScore(): Int {
        var score = 0

        if (hasPermission) score += 25
        if (isGpsEnabled) score += 20
        if (isNetworkEnabled) score += 10
        if (isLocationAvailable) score += 15
        if (isUpdating) score += 10
        if (lastUpdate.hasCoordinates()) score += 10
        if (lastUpdate.isFresh()) score += 5
        if (lastUpdate.accuracy <= 50f) score += 5

        return score.coerceIn(0, 100)
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ–±–ª–µ–º –¥–ª—è —Ä–µ—à–µ–Ω–∏—è
     */
    fun getIssuePriority(): IssuePriority {
        return when {
            !hasPermission -> IssuePriority.CRITICAL
            !isGpsEnabled && !isNetworkEnabled -> IssuePriority.HIGH
            !isLocationAvailable -> IssuePriority.MEDIUM
            !lastUpdate.isFresh() -> IssuePriority.LOW
            else -> IssuePriority.NONE
        }
    }
}

/**
 * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–±–ª–µ–º —Å–∏—Å—Ç–µ–º—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 */
enum class IssuePriority(val displayName: String, val icon: String) {
    NONE("–ü—Ä–æ–±–ª–µ–º –Ω–µ—Ç", "‚úÖ"),
    LOW("–ù–∏–∑–∫–∏–π", "üü°"),
    MEDIUM("–°—Ä–µ–¥–Ω–∏–π", "üü†"),
    HIGH("–í—ã—Å–æ–∫–∏–π", "üî¥"),
    CRITICAL("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "üö®");

    fun getDescription(): String {
        return "$icon $displayName –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
    }
}

/**
 * Comprehensive data class –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.
 *
 * –°–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã
 * —Å–∏—Å—Ç–µ–º—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.
 *
 * @param totalActiveRequests –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 * @param isMonitoringActive –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π GPS
 * @param lastUpdateAge –≤–æ–∑—Ä–∞—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (-1 –µ—Å–ª–∏ –Ω–µ—Ç)
 * @param currentAccuracy —Ç–µ–∫—É—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –≤ –º–µ—Ç—Ä–∞—Ö
 * @param hasValidCache –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫—ç—à–∞
 * @param currentMode —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
 * @param systemReady –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∫ —Ä–∞–±–æ—Ç–µ
 * @param totalUpdatesReceived –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 * @param averageAccuracy —Å—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å –∑–∞ —Å–µ—Å—Å–∏—é
 * @param batteryUsageLevel —É—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∞—Ç–∞—Ä–µ–∏
 */
data class LocationStatistics(
    val totalActiveRequests: Int,
    val isMonitoringActive: Boolean,
    val lastUpdateAge: Long, // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, -1 –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –±—ã–ª–æ
    val currentAccuracy: Float,
    val hasValidCache: Boolean,
    val currentMode: LocationMode,
    val systemReady: Boolean,
    val totalUpdatesReceived: Int = 0,
    val averageAccuracy: Float = 0f,
    val batteryUsageLevel: PowerLevel = PowerLevel.MEDIUM
) {
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ —Å –∏–∫–æ–Ω–∫–æ–π
     */
    fun getStatusText(): String {
        return when {
            !systemReady -> "üî¥ –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"
            lastUpdateAge < 0 -> "üü° –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏"
            lastUpdateAge > 300 -> "üü† –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏ (${lastUpdateAge}—Å –Ω–∞–∑–∞–¥)"
            currentAccuracy > 100 -> "üü° –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (¬±${currentAccuracy.toInt()}–º)"
            totalActiveRequests > 5 -> "‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ (${totalActiveRequests} –∑–∞–ø—Ä–æ—Å–æ–≤)"
            else -> "üü¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ"
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —Å –∫–ª—é—á–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
     */
    fun getSummary(): String {
        val ageText = if (lastUpdateAge >= 0) "${lastUpdateAge}—Å –Ω–∞–∑–∞–¥" else "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        val requestsText =
            if (totalActiveRequests > 0) "${totalActiveRequests} –∑–∞–ø—Ä–æ—Å–æ–≤" else "–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"

        return "${getStatusText()} | –¢–æ—á–Ω–æ—Å—Ç—å: ¬±${currentAccuracy.toInt()}–º | " +
                "–û–±–Ω–æ–≤–ª–µ–Ω–æ: $ageText | $requestsText"
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
     */
    fun getDetailedInfo(): String {
        return buildString {
            appendLine("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ï–°–¢–û–ü–û–õ–û–ñ–ï–ù–ò–Ø")
            appendLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
            appendLine("‚Ä¢ –°—Ç–∞—Ç—É—Å: ${getStatusText()}")
            appendLine("‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${currentMode.getFullDescription()}")
            appendLine("‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $totalActiveRequests")
            appendLine("‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPS: ${if (isMonitoringActive) "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}")
            appendLine("‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${formatLastUpdate()}")
            appendLine("‚Ä¢ –¢–µ–∫—É—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ¬±${currentAccuracy.toInt()}–º")
            appendLine("‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: ¬±${averageAccuracy.toInt()}–º")
            appendLine("‚Ä¢ –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $totalUpdatesReceived")
            appendLine("‚Ä¢ –ö—ç—à –∞–∫—Ç—É–∞–ª–µ–Ω: ${if (hasValidCache) "‚úÖ –î–∞" else "‚ùå –ù–µ—Ç"}")
            appendLine("‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞: ${if (systemReady) "‚úÖ –î–∞" else "‚ùå –ù–µ—Ç"}")
            appendLine("‚Ä¢ –≠–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: ${batteryUsageLevel.getIcon()} ${batteryUsageLevel.displayName}")
            appendLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
     */
    private fun formatLastUpdate(): String {
        return when {
            lastUpdateAge < 0 -> "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            lastUpdateAge < 60 -> "${lastUpdateAge} —Å–µ–∫—É–Ω–¥ –Ω–∞–∑–∞–¥"
            lastUpdateAge < 3600 -> "${lastUpdateAge / 60} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥"
            else -> "–ë–æ–ª–µ–µ ${lastUpdateAge / 3600} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥"
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
     */
    fun hasPerformanceIssues(): Boolean {
        return !systemReady || lastUpdateAge > 300 || currentAccuracy > 200 || totalActiveRequests > 10
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
     */
    fun getPerformanceLevel(): PerformanceLevel {
        return when {
            !systemReady -> PerformanceLevel.CRITICAL
            lastUpdateAge > 600 -> PerformanceLevel.POOR
            currentAccuracy > 200 -> PerformanceLevel.POOR
            totalActiveRequests > 10 -> PerformanceLevel.POOR
            lastUpdateAge > 120 -> PerformanceLevel.FAIR
            currentAccuracy > 50 -> PerformanceLevel.FAIR
            totalActiveRequests > 5 -> PerformanceLevel.FAIR
            lastUpdateAge < 30 && currentAccuracy <= 20 -> PerformanceLevel.EXCELLENT
            else -> PerformanceLevel.GOOD
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
     */
    fun getOptimizationSuggestions(): List<String> {
        val suggestions = mutableListOf<String>()

        if (!systemReady) {
            suggestions.add("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è")
        }

        if (lastUpdateAge > 300) {
            suggestions.add("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è")
        }

        if (currentAccuracy > 100) {
            suggestions.add("–°–º–µ–Ω–∏—Ç–µ —Ä–µ–∂–∏–º –Ω–∞ HIGH_ACCURACY –¥–ª—è –ª—É—á—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏")
        }

        if (totalActiveRequests > 8) {
            suggestions.add("–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        }

        if (batteryUsageLevel == PowerLevel.HIGH) {
            suggestions.add("–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–π —Ä–µ–∂–∏–º")
        }

        if (!hasValidCache) {
            suggestions.add("–î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è")
        }

        if (suggestions.isEmpty()) {
            suggestions.add("–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ")
        }

        return suggestions
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ü–µ–Ω–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã (0-100)
     */
    fun getEfficiencyScore(): Int {
        var score = 50 // –±–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞

        // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        if (systemReady) score += 20
        if (isMonitoringActive) score += 10
        if (hasValidCache) score += 5
        if (lastUpdateAge in 0..60) score += 15
        if (currentAccuracy <= 20) score += 10
        if (totalActiveRequests <= 3) score += 5

        // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        if (lastUpdateAge > 300) score -= 20
        if (currentAccuracy > 100) score -= 15
        if (totalActiveRequests > 8) score -= 10
        if (!isMonitoringActive) score -= 10

        return score.coerceIn(0, 100)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
     */
    fun hasCriticalIssues(): Boolean {
        return !systemReady || lastUpdateAge > 600 || totalActiveRequests > 15
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
     */
    fun getHealthRating(): HealthRating {
        val score = getEfficiencyScore()
        return when {
            score >= 90 -> HealthRating.EXCELLENT
            score >= 75 -> HealthRating.GOOD
            score >= 60 -> HealthRating.FAIR
            score >= 40 -> HealthRating.POOR
            else -> HealthRating.CRITICAL
        }
    }
}

/**
 * –£—Ä–æ–≤–Ω–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
 */
enum class PerformanceLevel(val displayName: String, val icon: String, val color: String) {
    CRITICAL("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è", "üö®", "üî¥"),
    POOR("–ù–∏–∑–∫–∞—è", "‚ùå", "üî¥"),
    FAIR("–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–∞—è", "‚ö†Ô∏è", "üü°"),
    GOOD("–•–æ—Ä–æ—à–∞—è", "‚úÖ", "üü¢"),
    EXCELLENT("–û—Ç–ª–∏—á–Ω–∞—è", "üèÜ", "üíö");

    fun getFullDescription(): String {
        return "$color $icon $displayName –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    }
}

/**
 * –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
 */
enum class HealthRating(val displayName: String, val icon: String, val description: String) {
    CRITICAL("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ", "üö®", "–°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞"),
    POOR("–ü–ª–æ—Ö–æ–µ", "‚ùå", "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É"),
    FAIR("–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ", "‚ö†Ô∏è", "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"),
    GOOD("–•–æ—Ä–æ—à–µ–µ", "‚úÖ", "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏"),
    EXCELLENT("–û—Ç–ª–∏—á–Ω–æ–µ", "üèÜ", "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ");

    fun getFullDescription(): String {
        return "$icon $displayName - $description"
    }
}

/**
 * Enum –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ GPS —Å–∏–≥–Ω–∞–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
 */
enum class SignalQuality(
    val displayName: String,
    val icon: String,
    val description: String,
    val minAccuracy: Float,
    val maxAccuracy: Float
) {
    UNKNOWN("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "‚ùì", "–ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ", 0f, Float.MAX_VALUE),
    NO_SIGNAL("–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞", "üö´", "GPS —Å–∏–≥–Ω–∞–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", Float.MAX_VALUE, Float.MAX_VALUE),
    POOR("–°–ª–∞–±—ã–π", "üì∂", "–°–ª–∞–±—ã–π GPS —Å–∏–≥–Ω–∞–ª, –Ω–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", 200f, Float.MAX_VALUE),
    FAIR("–°—Ä–µ–¥–Ω–∏–π", "üì∂üì∂", "–£–º–µ—Ä–µ–Ω–Ω—ã–π GPS —Å–∏–≥–Ω–∞–ª", 50f, 200f),
    GOOD("–•–æ—Ä–æ—à–∏–π", "üì∂üì∂üì∂", "–•–æ—Ä–æ—à–∏–π GPS —Å–∏–≥–Ω–∞–ª", 10f, 50f),
    EXCELLENT("–û—Ç–ª–∏—á–Ω—ã–π", "üì∂üì∂üì∂üì∂", "–û—Ç–ª–∏—á–Ω—ã–π GPS —Å–∏–≥–Ω–∞–ª, –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å", 0f, 10f);

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞
     */
    fun getColorIndicator(): String {
        return when (this) {
            UNKNOWN -> "‚ö™"
            NO_SIGNAL -> "üî¥"
            POOR -> "üî¥"
            FAIR -> "üü°"
            GOOD -> "üü¢"
            EXCELLENT -> "üíö"
        }
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏
     */
    fun getFullDescription(): String {
        return "${getColorIndicator()} $displayName $icon - $description"
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞ –ø–æ —Ç–æ—á–Ω–æ—Å—Ç–∏
     */
    companion object {
        fun fromAccuracy(accuracy: Float): SignalQuality {
            return values().firstOrNull { accuracy in it.minAccuracy..it.maxAccuracy } ?: UNKNOWN
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    fun isSuitableForCriticalOperations(): Boolean {
        return this in listOf(GOOD, EXCELLENT)
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
     */
    fun isSuitableForGeneralUse(): Boolean {
        return this in listOf(FAIR, GOOD, EXCELLENT)
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–∏–≥–Ω–∞–ª–∞
     */
    fun getImprovementSuggestions(): List<String> {
        return when (this) {
            NO_SIGNAL, POOR -> listOf(
                "–í—ã–π–¥–∏—Ç–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ",
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GPS –≤–∫–ª—é—á–µ–Ω",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ —á–µ—Ö–æ–ª –∞–Ω—Ç–µ–Ω–Ω—É"
            )

            FAIR -> listOf(
                "–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ—Å—å –ø–æ–¥–∞–ª—å—à–µ –æ—Ç –≤—ã—Å–æ–∫–∏—Ö –∑–¥–∞–Ω–∏–π",
                "–î–æ–∂–¥–∏—Ç–µ—Å—å –ª—É—á—à–µ–≥–æ –ø—Ä–∏–µ–º–∞ —Å–∏–≥–Ω–∞–ª–∞"
            )

            GOOD, EXCELLENT -> listOf("–ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞ —Ö–æ—Ä–æ—à–µ–µ")
            UNKNOWN -> listOf("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞")
        }
    }
}