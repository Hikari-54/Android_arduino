plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    // ‚ùå –£–ë–†–ê–ù: alias(libs.plugins.kotlin.compose)
}

android {
    namespace = "com.example.bluetooth_andr11"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.example.bluetooth_andr11"
        minSdk = 21
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    // üîê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏
    signingConfigs {
        create("release") {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ gradle.properties
            val keystoreFile = project.findProperty("DELIVERY_BAG_KEYSTORE_FILE") as String?
            val keystorePassword = project.findProperty("DELIVERY_BAG_KEYSTORE_PASSWORD") as String?
            val keyAlias = project.findProperty("DELIVERY_BAG_KEY_ALIAS") as String?
            val keyPassword = project.findProperty("DELIVERY_BAG_KEY_PASSWORD") as String?

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if (keystoreFile != null && keystorePassword != null &&
                keyAlias != null && keyPassword != null
            ) {
                val keystoreFileObj = file(keystoreFile)

                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                if (keystoreFileObj.exists()) {
                    storeFile = keystoreFileObj
                    storePassword = keystorePassword
                    this.keyAlias = keyAlias
                    this.keyPassword = keyPassword

                    println("‚úÖ Release –ø–æ–¥–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞: $keystoreFile")
                } else {
                    println("‚ö†Ô∏è Keystore —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $keystoreFile")
                    println("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –≤ gradle.properties")
                    println("   –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ debug –ø–æ–¥–ø–∏—Å—å")
                }
            } else {
                println("‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ gradle.properties")
                println("   –°–æ–∑–¥–∞–π—Ç–µ gradle.properties –∏–∑ gradle.properties.template")
                println("   –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ debug –ø–æ–¥–ø–∏—Å—å")
            }
        }
    }

    buildTypes {
        debug {
            // üîß –£–Ω–∏–∫–∞–ª—å–Ω—ã–π applicationId –¥–ª—è debug –≤–µ—Ä—Å–∏–∏
            applicationIdSuffix = ".debug"

            // üè∑Ô∏è –î–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å –∫ –∏–º–µ–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è
            resValue("string", "app_name", "Delivery Bag DEBUG")

            // üîç Debug –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            isDebuggable = true
            isMinifyEnabled = false
        }

        release {
            // üì± –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏–º—è –¥–ª—è release
            resValue("string", "app_name", "Delivery Bag")

            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ release –ø–æ–¥–ø–∏—Å–∏
            val releaseSigningConfig = signingConfigs.findByName("release")
            if (releaseSigningConfig?.storeFile?.exists() == true) {
                signingConfig = releaseSigningConfig
                println("üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è release –ø–æ–¥–ø–∏—Å—å")
            } else {
                println("‚ö†Ô∏è Release keystore –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è debug –ø–æ–¥–ø–∏—Å—å")
                println("   –î–ª—è production —Å–±–æ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ gradle.properties")
            }

            // üõ°Ô∏è Release –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è RuStore
            isMinifyEnabled = true  // üîÑ –í–ö–õ–Æ–ß–ê–ï–ú –æ–±—Ñ—É—Å–∫–∞—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            isShrinkResources = true // üóúÔ∏è –î–û–ë–ê–í–õ–Ø–ï–ú —Å–∂–∞—Ç–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    buildFeatures {
        compose = true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}

dependencies {
    // Core dependencies
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.navigation.compose)

    // Compose UI
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.material)
    implementation(libs.androidx.material3)

    // Google Play Services
    implementation(libs.play.services.location)

    // Maps
    implementation(libs.osmdroid.android)

    // Network and logging
    implementation(libs.okhttp)
    implementation(libs.logging.interceptor)

    // UI components
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.constraintlayout.compose)
    implementation(libs.androidx.foundation)

    // Testing
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)

    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)
}